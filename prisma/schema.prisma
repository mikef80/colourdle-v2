// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstname String
  lastname  String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Results   Result[]
}

enum GameStatus {
  W // Won
  L // Lost
  A // Abandoned
  P // In Progress
}

model Guess {
  id       String @id @default(cuid())
  resultId String
  guess    Json
  order    Int

  result Result @relation(fields: [resultId], references: [id], onDelete: Cascade)
}

model Result {
  id        String     @id @default(cuid())
  userId    String // Foreign key to the User model
  gameId    String // Foreign key to the Games model
  status    GameStatus
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  user  User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  game  Game    @relation(fields: [gameId], references: [id])
  guesses Guess[]

  @@unique([userId, gameId])
}

model Game {
  id       String   @id @default(cuid())
  gameDate DateTime @unique
  answer   Json
  Results  Result[]
}
